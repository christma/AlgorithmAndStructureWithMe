package Array.Main;

import java.util.Arrays;

public class Array {

  private int[] data;
  private int size;

  public Array(int capacity) {
    data = new int[capacity];
    size = 0;
  }

  public Array() {
    this(10);
  }

  public int getSize() {
    return size;
  }

  public int getCapacity() {
    return data.length;
  }

  public boolean isEmpty() {
    return size == 0;
  }

  public void addLast(int e) {
    add(size, e);
  }

  public void addFirst(int e) {
    add(0, e);
  }

  public void add(int index, int e) {
    if (size == getCapacity()) {
      throw new IllegalArgumentException("Array is full !");
    }
    if (index < 0 && index > size) {
      throw new IllegalArgumentException("index is failed !");
    }

    for (int i = size; i > index; i--) {
      data[i] = data[i - 1];
    }
    data[index] = e;
    size++;
  }

  int get(int index) {
    if (index < 0 && index > size) {
      throw new IllegalArgumentException("index is failed !");
    }
    return data[index];
  }

  int set(int index, int e) {
    if (index < 0 && index > size) {
      throw new IllegalArgumentException("index is failed !");
    }
    return data[index] = e;
  }

  public boolean contains(int e) {
    for (int i = 0; i < size; i++) {
      if (data[i] == e) {
        return true;
      }
    }
    return false;
  }

  public int find(int e) {
    for (int i = 0; i < size; i++) {
      if (data[i] == e) {
        return i;
      }
    }
    return -1;
  }

  public int remove(int index) {
    if (index < 0 && index > size) {
      throw new IllegalArgumentException("index is failed !");
    }
    int res = data[index];
    for (int i = index; i < size - 1; i++) {
      data[i] = data[i + 1];
    }
    size--;
    return res;
  }

  public int removeFirst() {
    return remove(0);
  }

  public int removeLast() {
    return remove(size - 1);
  }

  public void removeElement(int e) {
    int index = find(e);
    if (index != -1) {
      remove(index);
    }
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(String.format("Array  size = %d, capacity = %d \n", size, getCapacity()));
    sb.append("[ ");
    for (int i = 0; i < size; i++) {
      sb.append(data[i]);
      if (i != size - 1) {
        sb.append(", ");
      }
    }
    sb.append(" ]");
    return sb.toString();
  }
}
